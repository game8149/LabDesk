<Window x:Class="LabDeskWPF.Views.Main.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:domain="clr-namespace:LabDeskWPF.ModelViews.Base"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"  
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.CommandBindings>
        <CommandBinding Command="Copy" Executed="OnCopy"></CommandBinding>
    </Window.CommandBindings>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- data template used for the dialogs example, defines a View for a ViewModel of type DateTime  -->
            <DataTemplate DataType="{x:Type system:DateTime}">
                <StackPanel Margin="16">
                    <TextBlock>England win the World Cup:</TextBlock>
                    <TextBlock Margin="0 8 0 0" Text="{Binding }" />
                    <TextBlock Margin="0 8 0 0" >You will never see that again.</TextBlock>
                    <Button  Margin="0 8 0 0" IsDefault="True" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Style="{DynamicResource MaterialDesignFlatButton}">AWESOME</Button>
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>


    <Grid> 
        <materialDesign:DialogHost Identifier="RootDialog" SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">
            <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
                <materialDesign:DrawerHost.LeftDrawerContent>
                    <DockPanel MinWidth="212">
                        <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                                    DockPanel.Dock="Top" HorizontalAlignment="Right" Margin="16" 
                                    IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />
                        <ListBox x:Name="DemoItemsListBox" Margin="0 16 0 16" SelectedIndex="0"  ItemsSource="{Binding DemoItems}" PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp">
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="domain:DemoItem">
                                    <TextBlock Text="{Binding Name}" Margin="32 0 32 0" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                </materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel>
                    <materialDesign:ColorZone Padding="5" materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                            Mode="PrimaryMid" DockPanel.Dock="Top">
                        <DockPanel>
                            <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" IsChecked="False"
                                        x:Name="MenuToggleButton"/>
                            <materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges" StaysOpen="False">
                                <StackPanel>
                                    <Button Content="" Click="MenuPopupButton_OnClick"/>
                                    <Button Content="" Click="MenuPopupButton_OnClick"/>
                                    <Button Content="" />
                                    <Separator/>
                                    <Button Content="Cerrar Sesion" Click="MenuPopupButton_OnClick" IsEnabled="False" />
                                </StackPanel>
                            </materialDesign:PopupBox>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22">Material Design In XAML Toolkit</TextBlock>
                        </DockPanel> 
                    </materialDesign:ColorZone>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50px"  />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0">
                            <ListBox x:Name="DemoItemsListBoxx" ItemsSource="{Binding DemoItems}" ScrollViewer.VerticalScrollBarVisibility="Hidden" PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp">
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="domain:DemoItem">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="{Binding Name}"  Width="30px" Height="30px" HorizontalAlignment="Center"/>
                                            <Label Content="{Binding Name}"></Label>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>

                        <Grid Grid.Column="1">
                            <domain:DocumentationLinks DataContext="{Binding ElementName=DemoItemsListBox, Path=SelectedItem}"
                                            Margin="0 0 0 16"
                                            />
                            <ScrollViewer Grid.Row="1" 
                                HorizontalScrollBarVisibility="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.HorizontalScrollBarVisibilityRequirement}"
                                VerticalScrollBarVisibility="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.VerticalScrollBarVisibilityRequirement}" 
                                Padding="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.MarginRequirement}">
                                <ContentControl Content="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.Content}" />
                            </ScrollViewer>

                            <materialDesign:Snackbar MessageQueue="{materialDesign:MessageQueue}" x:Name="MainSnackbar"
                                        Grid.Row="1" />
                        </Grid>  
                    </Grid>
                </DockPanel>
            </materialDesign:DrawerHost>
        </materialDesign:DialogHost>
    </Grid>
</Window>
